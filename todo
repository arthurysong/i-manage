FILO (First In Last Out)

- some components cannot be accessed if units/users have not been loaded
    e.g. /units/2
- Adding user to a unit should redirect back to unit not to a different unit.

X Refactor Components connect some containers to redux so we don't have to pass in props => I think this is okay for now

X Remove all extraneous imports. => Removed all extra

X Add Instructions to README. => added description and how to use in readme.

X When user gets deleted I need to delete any residencies that user had..

X Add default user/unit when navigated to user/units... => Used componentDidMount and componenDidUpdate to redirect to unitshow
    click() upon mount and update so that the listitem becomes highlighted!

X UnitShow has link to UserShow. => UnitShow has link to User's show page.

X Cannot make payment if no unit???
    Nevermind this is already the case.

X Logging in as manager takes user to /units. => Logging in as Luna redirects to /units

X Reformat UserShow because we're using AuthUser show for when user is logged in; => UserShow displays the proper information
    for the logged in manager.
    
X When manager creates account redirect to account => Used lifecycle method componentShouldUpdate to redirect to newly
    created user

X Style all routes and components for when manager is logged in!
    X Style UnitsShow !!
    X Style UsersShow => All components have been styled, and proper web flow and component lifecycles.

X Style RegisterForm. => NewUserForm is now styled!

X Logging out redirects.. => Logging out redirects properly now.

- FormErrors when unmounted I need to clear errors.
   X Create clearErrors method dispatch action!.
   => Used componentUnmount lifecycle method to clean component on unmount as well as redux state.s
   X Need to do this for all components that use FormErrors..

X Style FormErrors component li elements. => FormErrors styled.

? Change so Jumbotron is in app component so all routes will have Jumbotron => For now I will put Bootstrap components into each component
 because I'm not sure how to combine Routes and Bootstrap components...

X Change home Component to use css instead of cols => Home jumbo uses css!

X when you login you're directed authuserbalance => Login redirects to proper page.

- style app with bootstrap!
    - jumbotron to contain
    - list group?
    - button
    - navbar
    - spinner for loading?
    - table for payments

X Payments should be a float with 2 decimal => payments are now to 2 decimal points as well as balances
    Validation... 
    for trying to submit payment
    - payments are floats and there are validations now!!!!!!!!

X manager can see her own page => There is link to see manager's own profile now
    Link to her page

X refactor unit and user show => refactored out payments section!
    there is a lot of repeated code
    I think I can abstract out a component..

X user can make payments => User can now make payments.
    => I need to add validations for payments X
    => Display errors X

? Can I make user authentication work with fetch???
    I don't think this is possible
    Because Rails needs access to browser to make sessions work..

? find out how to push without typing in password everytime

? catch errors

X new residentform => new residency form

X authenticating users
    https://medium.com/how-i-get-it/react-with-rails-user-authentication-8977e98762f2
    USER can now log in and react application can now check if user is logged in
    need to authorize users for web pages..
        direct the web flow for what people can see!